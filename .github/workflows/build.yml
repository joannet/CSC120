name: Java CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean compile

      - name: Detect modified files and run tests
        run: |
          # Check if there is a previous commit
          if [ $(git rev-list --count HEAD) -gt 1 ]; then
            MODIFIED_FILES=$(git diff --name-only HEAD^)
          else
            # Handle the case where there is no previous commit
            MODIFIED_FILES=$(git ls-files)
          fi

          # Run tests based on modified files
          if echo "$MODIFIED_FILES" | grep -q 'Lab1/src/main/java/lab1/Adder.java'; then
            mvn -Dtest=lab1.AdderTest test
          fi
          if echo "$MODIFIED_FILES" | grep -q 'Lab2/src/main/java/lab2/Lab2App.java'; then
            mvn -Dtest=lab2.Lab2AppTest test
          fi
          # Add more conditions for other labs as needed

      - name: Display test results
        run: |
          if [ -d Lab1/target/surefire-reports ]; then
            cat Lab1/target/surefire-reports/*.txt
          fi
          if [ -d Lab2/target/surefire-reports ]; then
            cat Lab2/target/surefire-reports/*.txt
          fi
          # Add more conditions for other labs as needed

      - name: Create annotations for test failures
        if: always()
        run: |
          if [ -d Lab1/target/surefire-reports ]; then
            for file in Lab1/target/surefire-reports/*.txt; do
              if grep -q 'FAILURE' "$file"; then
                echo "::error file=${{ github.workspace }}/$file::$(grep 'FAILURE' "$file")"
              fi
            done
          fi
          if [ -d Lab2/target/surefire-reports ]; then
            for file in Lab2/target/surefire-reports/*.txt; do
              if grep -q 'FAILURE' "$file"; then
                echo "::error file=${{ github.workspace }}/$file::$(grep 'FAILURE' "$file")"
              fi
            done
          fi
          # Add more conditions for other labs as needed
